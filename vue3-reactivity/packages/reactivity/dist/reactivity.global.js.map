{"version":3,"file":"reactivity.global.js","sources":["../src/reactive.ts"],"sourcesContent":["const mutableHandler = {};\r\nconst shallowReactiveHandlers = {};\r\nconst readonlyHandlers = {};\r\nconst shallowReadonlyHanlders = {};\r\n/**\r\n * @param target\r\n */\r\nexport function reactive(target) {\r\n  createReactiveObject(target, true, mutableHandler);\r\n}\r\nexport function shallowReactive(target) {\r\n  createReactiveObject(target, true, shallowReactiveHandlers);\r\n}\r\nexport function readonly(target) {\r\n  createReactiveObject(target, false, readonlyHandlers);\r\n}\r\nexport function shallowReadonly(target) {\r\n  createReactiveObject(target, false, shallowReadonlyHanlders);\r\n}\r\n\r\n/**\r\n * @param target 创建代理的目标\r\n * @param isReadonly 当前是不是仅读的\r\n * @param baseHandler 针对不同的方式创建不同的代理对象\r\n */\r\nfunction createReactiveObject(target, isReadonly, baseHandler) {\r\n  if (!_isObject(target)) target;\r\n  const proxy = new Proxy(target, baseHandler);\r\n}\r\n\r\n/**\r\n * 判断是否是对象类型\r\n * @param target\r\n * @returns\r\n */\r\nfunction _isObject(target) {\r\n  return typeof target === 'object' && target !== null;\r\n}\r\n"],"names":[],"mappings":";;;EAAA,MAAM,cAAc,GAAG,EAAE,CAAC;EAC1B,MAAM,uBAAuB,GAAG,EAAE,CAAC;EACnC,MAAM,gBAAgB,GAAG,EAAE,CAAC;EAC5B,MAAM,uBAAuB,GAAG,EAAE,CAAC;EACnC;;EAEG;EACG,SAAU,QAAQ,CAAC,MAAM,EAAA;EAC7B,IAAA,oBAAoB,CAAC,MAAM,EAAE,IAAI,EAAE,cAAc,CAAC,CAAC;EACrD,CAAC;EACK,SAAU,eAAe,CAAC,MAAM,EAAA;EACpC,IAAA,oBAAoB,CAAC,MAAM,EAAE,IAAI,EAAE,uBAAuB,CAAC,CAAC;EAC9D,CAAC;EACK,SAAU,QAAQ,CAAC,MAAM,EAAA;EAC7B,IAAA,oBAAoB,CAAC,MAAM,EAAE,KAAK,EAAE,gBAAgB,CAAC,CAAC;EACxD,CAAC;EACK,SAAU,eAAe,CAAC,MAAM,EAAA;EACpC,IAAA,oBAAoB,CAAC,MAAM,EAAE,KAAK,EAAE,uBAAuB,CAAC,CAAC;EAC/D,CAAC;EAED;;;;EAIG;EACH,SAAS,oBAAoB,CAAC,MAAM,EAAE,UAAU,EAAE,WAAW,EAAA;MAE7C,IAAI,KAAK,CAAC,MAAM,EAAE,WAAW,EAAE;EAC/C;;;;;;;;;;;;;;;"}